generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int       @id @default(autoincrement())
    username String
    email    String    @unique
    password String
    role     String
    Comment  Comment[]
}

//ChapterNumber is what number the chapter is
//ChapterCoverHash is the unique characters in the imgur link which we'll be able to use to get the cover image of a chapter
//ChapterTitle is the name of the chapter itself
//ChapterDescription is the description of the chapter
//ChapterImagesHash is the unique characters in the imgur link which we'll be able to use to get the chapter pages
//ChapterType is the type of chapter: Draft, Release. Draft chapters are the notebook comic and Release chapters are the rewrite chapters.
//ChapterReleaseDate is the release date of the chapter
model Chapter {
    id                 Int       @id @default(autoincrement())
    chapterCoverHash   String
    chapterNumber      Int
    chapterTitle       String
    chapterDescription String
    chapterImagesHash  String
    chapterType        String
    chapterReleaseDate DateTime
    Comment            Comment[]
}

model Comment {
    id        Int       @id @default(autoincrement())
    userId    Int
    chapterId Int
    content   String
    commentId Int?
    createdAt DateTime
    updatedAt DateTime?
    isEdited  Boolean
    replies   Comment[] @relation("CommentReplies")

    user          User     @relation(fields: [userId], references: [id])
    chapter       Chapter  @relation(fields: [chapterId], references: [id])
    parentComment Comment? @relation("CommentReplies", fields: [commentId], references: [id])
}
